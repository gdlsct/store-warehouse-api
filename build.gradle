import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.openapi.generator' version '7.8.0'
    id "io.freefair.lombok" version "8.6"
}

group = 'com.gdlsct'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'

    //openapi
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation 'jakarta.validation:jakarta.validation-api'

    //tests
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets.main.java.srcDirs += "$buildDir/generated/openapi"

tasks.register("store-warehouse", GenerateTask)

tasks.withType(GenerateTask).configureEach {
    if (name != "openApiGenerate") {
        group = "generation"

        remoteInputSpec.set("https://raw.githubusercontent.com/gdlsct/api-specifications/refs/heads/main/" + it.getName() + "/api.yaml")

        generatorName.set("spring")
        library.set("spring-boot")

        ignoreFileOverride.set(".openapi-generator-java-sources.ignore")
        outputDir.set("$buildDir/generated/openapi")

        configOptions != null ? configOptions : configOptions.set([
                useSpringBoot3                : "true",
                invokerPackage                : it.getName(),
                apiPackage                    : it.getName() + ".api",
                modelPackage                  : it.getName() + ".model",
                configPackage                 : it.getName() + ".configuration",
                basePackage                   : it.getName(),
                useOptional                   : "true",
                openApiNullable               : "false",
                interfaceOnly                 : "false",
                sourceFolder                  : "",
                generateModelTests            : "true",
                generateApiTests              : "true",
                testOutput                    : "$rootDir/src/java",
                additionalModelTypeAnnotations: "@lombok.Builder(toBuilder = true)",
                useTags                       : "true"
        ])
    }
}

compileJava.dependsOn tasks.matching { it.group == "generation" }
